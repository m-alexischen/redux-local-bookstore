{"ast":null,"code":"var _jsxFileName = \"/Users/alexis/Desktop/React/redux-bookstore/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiActions } from './store/ui-slice';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!'\n      }));\n      const response = await fetch('https://react-http-food-8eba9-default-rtdb.firebaseio.com/cart.jso', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n\n      ;\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'Send cart data successfully!'\n      }));\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error ',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexis/Desktop/React/redux-bookstore/src/App.js"],"names":["Fragment","useEffect","useSelector","useDispatch","uiActions","Cart","Layout","Products","Notification","isInitial","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,aAAnB,CAA5B;AACA,QAAMC,IAAI,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAxB;AACA,QAAMC,YAAY,GAAGf,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASG,YAAnB,CAAhC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,YAAY,GAAG,YAAY;AAC/BP,MAAAA,QAAQ,CAACP,SAAS,CAACe,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,SAD0B;AAElCC,QAAAA,KAAK,EAAE,YAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAD,EAAuE;AACnGC,QAAAA,MAAM,EAAE,KAD2F;AAEnGC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAF6F,OAAvE,CAA5B;;AAKA,UAAI,CAACO,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AAAA;AAEDnB,MAAAA,QAAQ,CAACP,SAAS,CAACe,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,SAD0B;AAElCC,QAAAA,KAAK,EAAE,YAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAKD,KApBD;;AAsBA,QAAIb,SAAJ,EAAe;AACbA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAEDS,IAAAA,YAAY,GAAGa,KAAf,CAAqBC,KAAK,IAAI;AAC5BrB,MAAAA,QAAQ,CAACP,SAAS,CAACe,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAE,QAD0B;AAElCC,QAAAA,KAAK,EAAE,QAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAKD,KAND;AAOD,GAnCQ,EAmCN,CAACN,IAAD,EAAOL,QAAP,CAnCM,CAAT;AAqCA,sBACE,QAAC,QAAD;AAAA,eACGM,YAAY,iBACX,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACG,MADvB;AAEE,MAAA,KAAK,EAAEH,YAAY,CAACI,KAFtB;AAGE,MAAA,OAAO,EAAEJ,YAAY,CAACK;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAA,iBACGV,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA3DQF,G;UACUP,W,EACAD,W,EACJA,W,EACQA,W;;;KAJdQ,G;AA6DT,eAAeA,GAAf","sourcesContent":["import { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiActions } from './store/ui-slice';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart); \n  const notification = useSelector(state => state.ui.notification);\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!'\n      }));\n      const response = await fetch('https://react-http-food-8eba9-default-rtdb.firebaseio.com/cart.jso', {\n      method: 'PUT',\n      body: JSON.stringify(cart),\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.')\n      };\n\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'Send cart data successfully!'\n      }));\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error ',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification \n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}